{
	"id": 0,
	"name": "slate-schema",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "ChildInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 4,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "child_invalid"
					}
				},
				{
					"id": 5,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 7,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 5,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Descendant"
					}
				},
				{
					"id": 4,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 6,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2,
						5,
						3,
						4
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 3,
					"character": 34
				}
			]
		},
		{
			"id": 6,
			"name": "ChildMaxInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 7,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 11,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "child_max_invalid"
					}
				},
				{
					"id": 11,
					"name": "count",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 15,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 14,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 12,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 16,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 12,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Descendant"
					}
				},
				{
					"id": 9,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 13,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						7,
						11,
						10,
						12,
						8,
						9
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 10,
					"character": 37
				}
			]
		},
		{
			"id": 13,
			"name": "ChildMinInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 14,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 20,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "child_min_invalid"
					}
				},
				{
					"id": 18,
					"name": "count",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 24,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 23,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 25,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 21,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Descendant"
					}
				},
				{
					"id": 16,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 22,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						14,
						18,
						17,
						19,
						15,
						16
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 19,
					"character": 37
				}
			]
		},
		{
			"id": 20,
			"name": "ChildUnexpectedError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 21,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 29,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "child_unexpected"
					}
				},
				{
					"id": 24,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 32,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 30,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Descendant"
					}
				},
				{
					"id": 23,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 31,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						21,
						24,
						22,
						23
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 28,
					"character": 37
				}
			]
		},
		{
			"id": 85,
			"name": "ChildValidation",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 86,
					"name": "match",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 16,
							"character": 7
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NodeMatch"
						}
					}
				},
				{
					"id": 88,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 18,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 87,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 17,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						86,
						88,
						87
					]
				}
			],
			"sources": [
				{
					"fileName": "rules.ts",
					"line": 15,
					"character": 32
				}
			]
		},
		{
			"id": 25,
			"name": "FirstChildInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 26,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 36,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "first_child_invalid"
					}
				},
				{
					"id": 29,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 39,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 27,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 37,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Descendant"
					}
				},
				{
					"id": 28,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 38,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						26,
						29,
						27,
						28
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 35,
					"character": 39
				}
			]
		},
		{
			"id": 30,
			"name": "LastChildInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 31,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 43,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "last_child_invalid"
					}
				},
				{
					"id": 34,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 46,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 32,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 44,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Descendant"
					}
				},
				{
					"id": 33,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 45,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						31,
						34,
						32,
						33
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 42,
					"character": 38
				}
			]
		},
		{
			"id": 49,
			"name": "MarkInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 50,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 70,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "mark_invalid"
					}
				},
				{
					"id": 54,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 74,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 53,
					"name": "mark",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 73,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Mark"
					}
				},
				{
					"id": 51,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 71,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Text"
					}
				},
				{
					"id": 52,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 72,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						50,
						54,
						53,
						51,
						52
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 69,
					"character": 33
				}
			]
		},
		{
			"id": 55,
			"name": "MarkPropertyInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 56,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 78,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "mark_property_invalid"
					}
				},
				{
					"id": 58,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 80,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57,
					"name": "mark",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 79,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Mark"
					}
				},
				{
					"id": 59,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 81,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Text"
					}
				},
				{
					"id": 60,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 82,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				},
				{
					"id": 61,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 83,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						56,
						58,
						57,
						59,
						60,
						61
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 77,
					"character": 41
				}
			]
		},
		{
			"id": 76,
			"name": "MarkRule",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 77,
					"name": "for",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 9,
							"character": 5
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "mark"
					}
				},
				{
					"id": 78,
					"name": "match",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 10,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "MarkMatch"
					}
				},
				{
					"id": 80,
					"name": "normalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 12,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 81,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 82,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 83,
											"name": "editor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Editor"
											}
										},
										{
											"id": 84,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MarkError",
												"id": 71
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "rules.ts",
									"line": 12,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 79,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 11,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "MarkValidation",
						"id": 74
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						77,
						78,
						80,
						79
					]
				}
			],
			"sources": [
				{
					"fileName": "rules.ts",
					"line": 8,
					"character": 25
				}
			]
		},
		{
			"id": 74,
			"name": "MarkValidation",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 75,
					"name": "properties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 5,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Record",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						75
					]
				}
			],
			"sources": [
				{
					"fileName": "rules.ts",
					"line": 4,
					"character": 31
				}
			]
		},
		{
			"id": 35,
			"name": "NextSiblingInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 36,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 50,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "next_sibling_invalid"
					}
				},
				{
					"id": 37,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 51,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Node"
					}
				},
				{
					"id": 38,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 52,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						36,
						37,
						38
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 49,
					"character": 40
				}
			]
		},
		{
			"id": 39,
			"name": "NodePropertyInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 40,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 56,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "node_property_invalid"
					}
				},
				{
					"id": 41,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 57,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Node"
					}
				},
				{
					"id": 42,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 58,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				},
				{
					"id": 43,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 59,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						40,
						41,
						42,
						43
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 55,
					"character": 41
				}
			]
		},
		{
			"id": 102,
			"name": "NodeRule",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 103,
					"name": "for",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 34,
							"character": 5
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "node"
					}
				},
				{
					"id": 104,
					"name": "match",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 35,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "NodeMatch"
					}
				},
				{
					"id": 106,
					"name": "normalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 37,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 107,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 108,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 109,
											"name": "editor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Editor"
											}
										},
										{
											"id": 110,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NodeError",
												"id": 72
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "rules.ts",
									"line": 37,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 105,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 36,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "NodeValidation",
						"id": 89
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						103,
						104,
						106,
						105
					]
				}
			],
			"sources": [
				{
					"fileName": "rules.ts",
					"line": 33,
					"character": 25
				}
			]
		},
		{
			"id": 44,
			"name": "NodeTextInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 45,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 63,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "node_text_invalid"
					}
				},
				{
					"id": 46,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 64,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Node"
					}
				},
				{
					"id": 47,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 65,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				},
				{
					"id": 48,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 66,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						45,
						46,
						47,
						48
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 62,
					"character": 37
				}
			]
		},
		{
			"id": 89,
			"name": "NodeValidation",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 90,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 22,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ChildValidation",
							"id": 85
						}
					}
				},
				{
					"id": 91,
					"name": "first",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 23,
							"character": 7
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NodeMatch"
						}
					}
				},
				{
					"id": 92,
					"name": "last",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 24,
							"character": 6
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NodeMatch"
						}
					}
				},
				{
					"id": 93,
					"name": "marks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 25,
							"character": 7
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "MarkMatch"
						}
					}
				},
				{
					"id": 94,
					"name": "next",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 26,
							"character": 6
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NodeMatch"
						}
					}
				},
				{
					"id": 95,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 27,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NodeMatch"
						}
					}
				},
				{
					"id": 96,
					"name": "previous",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 28,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NodeMatch"
						}
					}
				},
				{
					"id": 97,
					"name": "properties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 29,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Record",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 98,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "rules.ts",
							"line": 30,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 99,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 100,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 101,
													"name": "text",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						90,
						91,
						92,
						93,
						94,
						95,
						96,
						97,
						98
					]
				}
			],
			"sources": [
				{
					"fileName": "rules.ts",
					"line": 21,
					"character": 31
				}
			]
		},
		{
			"id": 62,
			"name": "ParentInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 63,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 87,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "parent_invalid"
					}
				},
				{
					"id": 66,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 90,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 64,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 88,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Ancestor"
					}
				},
				{
					"id": 65,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 89,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						63,
						66,
						64,
						65
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 86,
					"character": 35
				}
			]
		},
		{
			"id": 67,
			"name": "PreviousSiblingInvalidError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 68,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 94,
							"character": 6
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "previous_sibling_invalid"
					}
				},
				{
					"id": 69,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 95,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Node"
					}
				},
				{
					"id": 70,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "errors.ts",
							"line": 96,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Path"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						68,
						69,
						70
					]
				}
			],
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 93,
					"character": 44
				}
			]
		},
		{
			"id": 71,
			"name": "MarkError",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 99,
					"character": 21
				}
			],
			"type": {
				"type": "reference",
				"name": "MarkPropertyInvalidError",
				"id": 55
			}
		},
		{
			"id": 72,
			"name": "NodeError",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 101,
					"character": 21
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "ChildInvalidError",
						"id": 1
					},
					{
						"type": "reference",
						"name": "ChildMaxInvalidError",
						"id": 6
					},
					{
						"type": "reference",
						"name": "ChildMinInvalidError",
						"id": 13
					},
					{
						"type": "reference",
						"name": "ChildUnexpectedError",
						"id": 20
					},
					{
						"type": "reference",
						"name": "FirstChildInvalidError",
						"id": 25
					},
					{
						"type": "reference",
						"name": "LastChildInvalidError",
						"id": 30
					},
					{
						"type": "reference",
						"name": "MarkInvalidError",
						"id": 49
					},
					{
						"type": "reference",
						"name": "NextSiblingInvalidError",
						"id": 35
					},
					{
						"type": "reference",
						"name": "NodePropertyInvalidError",
						"id": 39
					},
					{
						"type": "reference",
						"name": "NodeTextInvalidError",
						"id": 44
					},
					{
						"type": "reference",
						"name": "ParentInvalidError",
						"id": 62
					},
					{
						"type": "reference",
						"name": "PreviousSiblingInvalidError",
						"id": 67
					}
				]
			}
		},
		{
			"id": 73,
			"name": "SchemaError",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "errors.ts",
					"line": 115,
					"character": 23
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "MarkError",
						"id": 71
					},
					{
						"type": "reference",
						"name": "NodeError",
						"id": 72
					}
				]
			}
		},
		{
			"id": 111,
			"name": "SchemaRule",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "rules.ts",
					"line": 40,
					"character": 22
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "MarkRule",
						"id": 76
					},
					{
						"type": "reference",
						"name": "NodeRule",
						"id": 102
					}
				]
			}
		},
		{
			"id": 123,
			"name": "checkAncestor",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Check an ancestor node object's children."
			},
			"signatures": [
				{
					"id": 124,
					"name": "checkAncestor",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check an ancestor node object's children."
					},
					"parameters": [
						{
							"id": 125,
							"name": "editor",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Editor"
							}
						},
						{
							"id": 126,
							"name": "entry",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AncestorEntry"
							}
						},
						{
							"id": 127,
							"name": "rule",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "NodeRule",
								"id": 102
							}
						},
						{
							"id": 128,
							"name": "ancestorRules",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NodeRule",
									"id": 102
								}
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "NodeError",
								"id": 72
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "checkers.ts",
					"line": 115,
					"character": 26
				}
			]
		},
		{
			"id": 112,
			"name": "checkMark",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Check a mark object."
			},
			"signatures": [
				{
					"id": 113,
					"name": "checkMark",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check a mark object."
					},
					"parameters": [
						{
							"id": 114,
							"name": "editor",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Editor"
							}
						},
						{
							"id": 115,
							"name": "entry",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "MarkEntry"
							}
						},
						{
							"id": 116,
							"name": "rule",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "MarkRule",
								"id": 76
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "MarkError",
								"id": 71
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "checkers.ts",
					"line": 19,
					"character": 22
				}
			]
		},
		{
			"id": 117,
			"name": "checkNode",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Check a node object."
			},
			"signatures": [
				{
					"id": 118,
					"name": "checkNode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check a node object."
					},
					"parameters": [
						{
							"id": 119,
							"name": "editor",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Editor"
							}
						},
						{
							"id": 120,
							"name": "entry",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "NodeEntry"
							}
						},
						{
							"id": 121,
							"name": "rule",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "NodeRule",
								"id": 102
							}
						},
						{
							"id": 122,
							"name": "rules",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NodeRule",
									"id": 102
								}
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "NodeError",
								"id": 72
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "checkers.ts",
					"line": 50,
					"character": 22
				}
			]
		},
		{
			"id": 129,
			"name": "checkParent",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Check a parent node object's children."
			},
			"signatures": [
				{
					"id": 130,
					"name": "checkParent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Check a parent node object's children."
					},
					"parameters": [
						{
							"id": 131,
							"name": "editor",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Editor"
							}
						},
						{
							"id": 132,
							"name": "entry",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AncestorEntry"
							}
						},
						{
							"id": 133,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 134,
							"name": "rule",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "NodeRule",
								"id": 102
							}
						},
						{
							"id": 135,
							"name": "childRule",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "NodeRule",
								"id": 102
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "NodeError",
								"id": 72
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "checkers.ts",
					"line": 253,
					"character": 24
				}
			]
		},
		{
			"id": 136,
			"name": "withSchema",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "The `withSchema` plugin augments an editor to ensure that its content is\nnormalized to always obey a schema after operations are applied."
			},
			"signatures": [
				{
					"id": 137,
					"name": "withSchema",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "The `withSchema` plugin augments an editor to ensure that its content is\nnormalized to always obey a schema after operations are applied."
					},
					"parameters": [
						{
							"id": 138,
							"name": "editor",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Editor"
							}
						},
						{
							"id": 139,
							"name": "rules",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SchemaRule",
									"id": 111
								}
							},
							"defaultValue": " []"
						}
					],
					"type": {
						"type": "reference",
						"name": "Editor"
					}
				}
			],
			"sources": [
				{
					"fileName": "with-schema.ts",
					"line": 12,
					"character": 23
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				1,
				6,
				13,
				20,
				85,
				25,
				30,
				49,
				55,
				76,
				74,
				35,
				39,
				102,
				44,
				89,
				62,
				67
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				71,
				72,
				73,
				111
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				123,
				112,
				117,
				129,
				136
			]
		}
	]
}